{-
This is a convenience function that combines `concat` and `map`

```
./concatMap a b f xs = ./concat b (./map a b f xs)
```

Examples:

```
./concatMap
(List Text)
Text
(List/head Text)
([["ABC", "DEF"] : List Text] : Optional (List Text))
= ["ABC"] : Optional Text

./concatMap
(List Text)
Text
(List/head Text)
([[] : List Text] : Optional (List Text))
= [] : Optional Text
```

-}
let concatMap
    : ∀(a : Type) → ∀(b : Type) → (a → Optional b) → Optional a → Optional b
    =   λ(a : Type)
    →   λ(b : Type)
    →   λ(f : a → Optional b)
    →   λ(x : Optional a)
    →   Optional/fold a x (Optional b) f ([] : Optional b)

in  concatMap
